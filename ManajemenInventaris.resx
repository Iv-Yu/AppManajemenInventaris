<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAABAAEAHCAAAAEAIACoDgAAFgAAACgAAAAcAAAAQAAAAAEAIAAAAAAAAA4AAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACampoAkpKSAIuLiwCNjY0AmJiYAIqKigCTk5MAl5eXAJOT
        kwCampoAj4+PAIuLiwCJiYkAjY2NAIyMjAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAlpaWAKOjowGUlJQBj4+PAwcHBwB3d3cArKysAQAAAACioqIBwcHBAHZ2
        dgCOjo4Ci4uLA3l5eQCOjo4BAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAJmZmQiKiopPhYWFX46OjjGLi4s5g4ODV4aGhk2GhoZahoaGUomJiU6Hh4dMhYWFaIqK
        ijSKiopBhYWFPgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACfoYUATIPUAEKA
        2QDIqn4Bh4eHbIWFhZ+Li4tChoaGgYeHh2qGhoZ1iIiIb4aGhnOLi4tMhoaGhYSEhICHh4crioqKfIaG
        hkSZwKYAlsWnAJnDpwDFh60AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPH3nAE+E0AtDgNkjTYHPC46K
        hB6Kioo1j4+PH4mJiSOOjo4OjIyMIpGRkRWOjo4jlZWVEIeHhyeGhoYhiIiIDIqKiieRh5UNpruwBJbF
        pxOfvagEmsiqAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAEyD1hM7f+WkNH7q4zl94q1CetEsXYG2AHiH
        oACHh4cAjIyMAIqKigCOjo4Ai4uLAJGRkQCEhIQAg4ODAHmPYwBrnUUAdqpeJI/JoZmPz6nPkc2ojpzF
        qg4AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA+gN5EM37r+DF97f8xfev/N3zi2UF/3V9agcQIRIDXAGSE
        uQAAAAAAAAAAAAAAAAAAAAAAeY1YAF2cHQB0l0oEV6MRUWiyQNCLz6L/jdGo/47QqPeUyadDAAAAAAAA
        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
</value>
  </data>
</root>